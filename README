SPMK
====
Simple ports and package system.
Features:

  * dependency resolving,
  * support of binary packages,
  * package signing (currently uses openssl, polarssl is planned).

Ports part implemented in 9base tools (rc, mk). Package management implemented
in portable POSIX sh (busybox compatible) and in rc.

More extensive documentation is not yet written. Look into `sample/build.mk`
for example of building script.

Requirements
------------

  * 9base, p9p (tested on 9base)
  * openssl (optional, for signing and verifying packages) 
  * fakeroot (used for setting owner as root in package tarball)
  * tar, gzip
  * coreutils (cp, mv, rm)

Installation
------------
To install spmk into `/usr/local/` type

  mk install

Then it will expect user configuration (for defining default build environment
like `CC`) *.mk files in `/usr/local/etc/spmk`, public keys for verifying
packages in `/usr/local/etc/spmk/pubkeys`, private key for signing is
`/usr/local/etc/spmk/priv.key`. Look into `mkfile` for more configurable
variables.

Slackware backend
-----------------
To build a package for spmk with slackware backend type `mk` in `slackware`
directory.

Building fake root for playing
------------------------------
`tools` directory contains scripts for generating fake ports tree for testing.
Run `./tools/mktestenv` for creating `root/` directory with installed spmk and
tree of fake ports in `root/usr/ports`. Then you can execute

  export PATH=`pwd`/root/usr/sbin:$PATH

and play with spmk and sp.

Contacts
--------
jid: ramil.fh@jabber.ru
mail: ramil@gmx.co.uk
irc: gravicappa at irc.freenode.net && irc.oftc.net
