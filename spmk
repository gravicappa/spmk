#!/usr/bin/env rc

spmk_inc=$HOME/dev/spmk/
spmk_mk_d=$HOME/dev/spmk/spmk.d
spmk_privkey=$HOME/dev/spmk/priv.key
root=$HOME/dev/spmk/root
pkgdb=$root/var/lib/spmk
ports=$root/usr/ports
pkgdest=$ports
buildroot=$root/tmp/build
sudo=sudo
test -n $"arch || arch=`{uname -m}

fn pkgfilename {echo $target-$arch.pkg.tar.gz}

fn die {
  echo $1 >[1=2]
  exit 1
}

fn msg {
  echo '#' $target: $* >[1=2]
}

fn verifysrc {
  if (! ~ $2 `{sha1sum $1 | awk '{print $1}'})
    die 'Wrong checksum for '^$1
}

fn mkpkg {
  s=$status
  if (~ $s '') {
    f=`{pkgfilename}
    spmk_pkg $pkgdir $"prereq $pkgdest/$"f
    if (test -f $spmk_privkey)
      openssl dgst -sha1 -sign $spmk_privkey <$pkgdest/$"f >$pkgdest/$"f.sig
    if not
      msg 'Warning: cannot sign package '^$pkgdest/$"f
    $sudo sp -a $pkgdest/$"f
  }
  exit $s
}

fn __PACKAGE__ {
  switch ($"pkgmode) {
  case dep
    echo $target
    exit 0
  }
  test -e $target && exit 0
  portdir=`{dirname $portfile}
  pkgroot=$buildroot/$target
  pkgdir=$pkgroot/pkg
  name=`{echo $target | sed 's/-[0-9].*$//'}
  version=`{echo $target | sed s/$name-//}
  for (s in $arch any)
    f='' {
      f=`{arch=$s pkgfilename}
      if (test -f $pkgdest/$"f)
        $sudo sp -a $pkgdest/$"f && exit 0
    }
  if (! ~ ' '^$"MKARGS^' ' *' '^$name^' '*)
    reason=dependency
  if (test -n $"REASON)
    reason=$REASON

  rm -rf $pkgroot
  mkdir -p $pkgroot $pkgdir
  cd $pkgroot

  fn sigexit {mkpkg}
}

fn mkports {
  rc -e -c 'whatis spmk_local' >/dev/null >[2=1] && spmk_local
  awk 'BEGIN {print "MKSHELL=rc"}
       /^[ \t]*__PACKAGE__[ \t]*$/ {print "  portfile=''" FILENAME "''"}
       {print}
       END {print "<|cat $spmk_mk_d/*.mk"}' $ports/*/*/build.mk $*
}

fn mkrevdep {
  rc -e -c 'whatis spmk_local' >/dev/null >[2=1] && spmk_local
  awk -F: 'BEGIN {printf "MKSHELL=rc\n%:Q:\n  echo $target\n\n"}
           /^[^ \t][^''=%:]*:/ {
             sub(/:[A-Z]+:/, ":")
             sub(/^[ \t]*/, "", $2)
             if (length($2) > 0)
               print $2 ":VQ: " $1
           }' $ports/*/*/build.mk
}

fn mkdep {
  rc -e -c 'whatis spmk_local' >/dev/null >[2=1] && spmk_local
  awk 'BEGIN {printf "MKSHELL=rc\npkgmode=dep\n"}
       /^[^ \t][^''=:%]*:/ {sub(/:[A-Z]*:*/, ":VQ:")}
       {print}' $ports/*/*/build.mk
}

cmd=$1
if (~ $cmd -*)
  shift
switch ($cmd) {
case ''
  test -f build.mk || die 'no build.mk'
  dir=`{pwd}
  cd $pkgdb
  exec mk -f <{mkports $"dir/build.mk}
case -b
  cd $pkgdb
  exec mk -f <{mkports} $*
case -r
  exec sp -r <{mk -f <{mkrevdep} $* | grep -v '[-][0-9]'}
case -d
  exec mk -f <{mkdep} $*
case -rd
  mk -f <{mkrevdep} $* | grep -v '[-][0-9]'
case -u
  die 'TODO: update whole system'
case *
  echo 'Usage: spmk [-b|-a|-r|-d|-rd|-u] packages...'
  exit 1
}
