#!/usr/bin/env rc

spmk_inc=$HOME/dev/spmk/
spmk_mk_d=$HOME/dev/spmk/spmk.d
spmk_privkey=$HOME/dev/spmk/priv.key
root=$HOME/dev/spmk/root
pkgdb=$root/var/lib/spmk
ports=$root/usr/ports
buildroot=$root/tmp/build
pkgfmt='$target-$arch.pkg.tar.gz'
sudo=sudo
test -n $"arch || arch=`{uname -m}

fn mkports {
  for (f in $ports/*/spmk_*) test -x $f && $f
  awk 'BEGIN {print "MKSHELL=rc"}
       /^[ \t]*\.[ \t]*\$spmk_inc/ {print "  portfile=''" FILENAME "''"}
       {print}
       END {print "<|cat $spmk_mk_d/*.mk"}' $ports/*/*/build.mk $*
}

fn mkrevdep {
  echo 'MKSHELL=rc'
  @{
    cd $pkgdb
    for (f in *-[0-9]*/)
      if (test -d $f) {
        printf '%s:VQ: %s\n\n' `{echo $f | sed 's/-[0-9].*$//'} $f
        printf '%s:VQ:' $f
        test -f $f/required_by && cat $f/required_by | xargs
        printf '  %s %s\n\n' $1 $f
      }
  }
}

fn mkdep {
  awk 'BEGIN {print "MKSHELL=rc"}
       /^[^ \t].*:/ {
         rule = 1
         sub(/:[A-Z]+:/, ":")
         sub(/:/, ":VQ:")
         print
         next
       }
       /^[ \t]*[^ \t]/ && rule {
         printf("  echo $target\n\n")
         rule = 0
       }
       /^[^ \t]/ {print}' $ports/*/*/build.mk
}

cmd=$1
if (~ $cmd -*)
  shift
switch ($cmd) {
  case ''
    test -f build.mk || {echo 'no build.mk' >[1=2]; exit 1}
    dir=`{pwd}
    cd $pkgdb
    exec mk -f <{mkports $"dir/build.mk}

  case -b
    cd $pkgdb
    exec mk -f <{mkports} $*

  case -r
    exec mk -f <{mkrevdep spmk_rm} $*

  case -d
    exec mk -f <{mkdep} $*

  case -rd
    exec mk -f <{mkrevdep echo} $*

  case -u
    echo 'TODO: update whole system' >[1=2]
    exit 1

  case *
    echo 'Usage: spmk [-b|-a|-r|-d|-rd|-u] packages...'
    exit 1
}
