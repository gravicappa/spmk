#!/bin/sh

. $HOME/dev/spkg/spkg.conf

exclude='$tmpdir/exclude'
noverify='yes'

err() {
	echo error: "$1" >&2
}

die() {
	err "$1"
	exit 1
}

verify() {
  openssl dgst -sha1 -verify "$pubkey" -signature "$2" < "$1" > /dev/null
}

current_version() {
  for f in "$pkgdb/$1"-[0-9]*; do
    basename "$f"
    break
  done
}

remove_files() {
  tac "$1" | while read -r f ; do
    if test -f "$root/$f"; then
      rm -f "$root/$f"
    elif test -d "$root/$f"; then
      rmdir "$root/$f" 2>/dev/null || true
    fi
  done
}

pkgfile="$1"
pkg=$(basename "$pkgfile" | sed 's/\.pkg\.tar\.gz$//')
pkgname=$(echo "$pkg" | sed 's/-[0-9].*$//')
tmp="$tmpdir/$pkg"

if test -z "$noverify" ; then
  test -f "spkgfile.sig" || die "Package '$pkgfile' not signed."
  verify "$pkgfile" "$pkgfile.sig" || die "Package '$pkgfile' is corrupted."
fi

rm -rf "$tmp"
mkdir -p "$tmp" || die "Cannot create temp directory '$tmp'"
trap "rm -rf '$tmp'" EXIT
echo '+PKG' > "$exclude"

cur=$(current_version "$pkgname")

if test -n "$cur" && test -e "$pkgdb/$cur"; then
  if test -f "$pkgdb/$pkg/uninstall" ; then
    sh -c ". '$pkgdb/$pkg/uninstall'"
  fi
  remove_files "$pkgdb/$cur/files"
  rm -rf "$pkgdb/$cur"
fi

gunzip < "$pkgfile" | (cd "$tmp"; tar -x -f - "+PKG") || die "Broken package."
gunzip < "$pkgfile" | tar -t -f - | grep -v '^+PKG' > $tmp/files \
|| die "Broken package."

while read -r f ; do
  case "$f" in
    */) check='-f' ;;
    *) check='-e' ;;
  esac
  if test $check "$root/$f"; then
    err "File '$root/$f' already exists."
    s=error
  fi
done < "$tmp/files"
test "$s" = error && die 'Aborting install.'

if ! gunzip < "$pkgfile" | (cd "$root" && tar -x -f - -X "$exclude") ; then
  remove_files "$tmp/files"
  die "Couldn't unpack contents of '$pkgfile'"
fi

if test -f "$tmp/+PKG/install" ; then
  sh -c ". '$tmp/+PKG/install'" \
  || {
    remove_files "$tmp/files"
    die 'Error in install script.'
  }
fi

mkdir -p "$pkgdb/$pkg"
cp "$tmp/+PKG"/* "$tmp/files" "$pkgdb/$pkg"
