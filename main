test -e $target && exit 0

fn msg {
  echo '#' $target: $* >[1=2]
}

fn die {
  echo '#!' $target: error: $* >[1=2]
  exit 1
}

fn verifysrc {
  file=$1
  sum=$2
  realsum=`{sha1sum $file | awk '{print $1}'}
  if (! ~ $sum $realsum)
    die $file wrong checksum
}

fn install_reason {
  if (echo ' '^$"MKARGS^' ' | grep -v ' '^$name^' ' >/dev/null)
    echo as_dependency
  if not
    echo explicitely
}

fn sigexit {
  s=$status
  if (~ $s '') {
    eval 'f=`{echo' $"pkgfmt '}'
    spmk_pkg $pkgdir $"prereq $install $pkgdest/$"f
    if (test -f $spmk_privkey)
      openssl dgst -sha1 -sign $spmk_privkey <$pkgdest/$"f >$pkgdest/$"f.sig
    if not
      msg Warning: cannot sign package $pkgdest/$"f
    $sudo spmk_add $pkgdest/$"f
    rm -rf $pkgroot
  }
  exit $s
}

portdir=`{dirname $portfile}
pkgroot=$buildroot/$target
pkgdir=$pkgroot/pkg
pkgdest=$ports

for (s in $arch any)
  ifs='' f='' {
    arch=$s eval 'f=`{echo' $"pkgfmt '}'
    if (test -f $pkgdest/$"f)
      $sudo spmk_add $pkgdest/$"f && exit 0
  }

name=`{echo $target | sed 's/-[0-9].*$//'}
version=`{echo $target | sed s/$name-//}
install=''

reason=`{install_reason}
if (test -z $"REASON)
  reason=$REASON

rm -rf $pkgroot
mkdir -p $pkgroot $pkgdir
cd $pkgroot
