test -e $target && exit 0

name=`{echo $target | sed 's/-[0-9].*$//'}
version=`{echo $target | sed s/$name-//}
pkgroot=$buildroot/$target
pkgdir=$pkgroot/pkg
pkgdest=$ports
install=''

fn msg {
  echo '=' $target: $* >[1=2]
}

fn die {
  echo '!' $target: error: $* >[1=2]
  exit 1
}

fn sort_ver {
  sort -t. -k1,1n -k2,2n -k3,3n -k4,4n -k5,5n
}

fn find_all_ver {
  echo $version
  for (p in $name-*)
    test -e $p && echo $p | sed s/$name-//
}

fn download {
  file=$2
  test -z $file && file=`{basename $1}
  msg downloading $1 to $file
  test -f $file || wget $1 -O $file
}

fn verifysrc {
  msg checking
  if (test -f $ports/$name/sig) {
    {
      while (line=`{read}) {
        sum=`{echo $line | cut -d' ' -f1}
        file=`{echo $line | cut -d' ' -f2-}
        realsum=`{sha1sum $ports/$name/$file | cut -d' ' -f1}
        if (! ~ $sum $realsum)
          die $file wrong checksum
      }
    } < $ports/$name/sig
  }
  if not
    msg warning: sources not signed
}


fn remove_old {
  msg 'TODO: remove old version?' $*
}

fn process_prev_installed {
  find_all_ver | sort_ver | {
    while (line=`{read} && test $line '!=' $1) {
			ver=$line
      remove_old $name-$line
		}
		if (line=`{read} && test -n $line) {
			msg $name-$line is newer than $target
			exit 0
		}
  }
}

fn install_reason {
  if (echo ' '^$"MKARGS^' ' | grep -v ' '^$name^' ' >/dev/null)
		echo as_dependency
	if not
	  echo explicitely
}

fn end_pkg {
	cd $pkgroot
	pkgfile=$pkgdest/$target-$arch.pkg.tar.gz
	$cmddir/mkpkg $pkgdir $pkgfile $prereq $install
	spkg_add $pkgfile
	if (test -f $spkg_privkey)
		openssl dgst -sha1 -sign $spkg_privkey < $pkgfile > $pkgfile.sig
	if not
		msg 'Warning: cannot sign package ' $pkgdest/$pkgfile
	rm -rf $pkgroot
}

reason=`{install_reason}
if (test $#REASON -gt 0)
	reason=$REASON

process_prev_installed $version || true

rm -rf $pkgroot
mkdir -p $pkgroot $pkgdir
cd $pkgroot
